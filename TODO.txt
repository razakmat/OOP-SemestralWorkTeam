================ TODO =====================================================
spustitelna db neco jako ve snakes and ladders, na strane tridy mit apuatitelnou metodu, co otevre novou databazi, a dalsi, co se k ni vrati.
Testy
 
Duplicitni kod v testech (inicializace atd.) vyresit pres funkce.

Prejmenovavani:
    MyWindow1 -> treba "MovieDatabase"
    AuthentificationState -> AuthenticationState
    addFilmData -> rename na getFilmData nebo tak nejak

authentificationState a SignUp state >>initializePresenter - duplicity v kodu
 => abstrakce??

abstrahovat RootState???

Testy, co delaji to samy, najit a vyhodit
================ BUGS =====================================================

AdminRootState - neimplementovany Remove Film - implementovat nebo odstranit

Add director state tests - nekdy zluty

manage review test - cerveny obcas - test manage review button return


======== FEATURES (nepovinne, pokud zbyde cas) ============================

Director state >> initializeWidgets
  - zmenit Return to movie na Return to + 'nazev filmu'

Zobrazovani zanru vedle filmu

View DB as a guest - pouze prohlizeni filmu, nikoliv vyhledavani
  -> novy stav GuestRootState
  
prepsat 'admin' a 'normal' role na symboly (???)

================ DONE =====================================================

STAVY
(X)  -> NEW intro state, tady autentikace a r͟o͟z͟d͟e͟l͟e͟n͟i͟ ͟n͟a͟ ͟A͟d͟m͟i͟n͟/͟N͟o͟r͟m͟a͟l͟ ͟s͟t͟a͟v͟


pro normalniho uzivatele - normalni jen vyhledava a komentuje
(X)  -> comment state
(X)  -> search state - by genre/ by film
(X) SignUp state - vyresit password a login nil check - je to ve dvou klauzuli,
    je potreba to hodit do nejakyho jednoho ORu

(X) KOLEKCE
(X)  -> zanry
(X)  -> usery

pro oba - nejak rozdelit na 2 podtridy u spolecnych stavu, nejspis to bude WholeDatabaseState
  -> single state
  -> whole database state
  -> director state

(X) NullObject Pattern: pri zadani nevalidniho ID filmu prejdeme na SingleState s zadnymi daty, pritom zustanou tlacitka (addReview, showDirector) ->
(?) naimplementujeme custom exceptiony, budeme je hodit pres NullObject a zachytime v SingleStatu.

# (CANCELED)StrategyPattern bude v "User preferences" : rozlozeni tlacitek

(Alex working on this) pro adminy - admin jen pridava, maze, upravuje
  -> add user / remove user / edit - edituje pouze nick nebo password (mozna dobry 
     feature by bylo umoznit zmenu nicku pouze jednou, zmenit nejakou promennou "alreadyChangedNickname" 
     na true a potom pokud by se nekdo pokousel znovu zmenit nickname, tak by to vyhodilo exceptionu, 
     ktera by adminovi vynadala a vratila ho zpatky - a mame dalsi bod splnenej)
  # (CANCELED) -> add genre
  
(X)  viewSelectedFilm - hazi error, kdyz zadny film neni vybrany

(X) AdminStatesTest a StatePatternTest pouzivaji stejne metody => abstrahovat