Object subclass: #Director	instanceVariableNames: 'firstName Surname born'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!Director methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:42'!born: aNumber	born := aNumber! !!Director methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:41'!Surname	^ Surname 	! !!Director methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:41'!firstName	^ firstName ! !!Director methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:41'!firstName: aName	firstName := aName ! !!Director methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:41'!Surname: aName	Surname := aName 	! !!Director methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:42'!born	^ born! !Object subclass: #Film	instanceVariableNames: 'id name director'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!Film methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 20:26'!id: aNumber	id := aNumber! !!Film methodsFor: 'accessing' stamp: 'MatejRazak 11/21/2018 17:25'!name: aString	name := aString ! !!Film methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 20:26'!id 	^ id! !!Film methodsFor: 'accessing' stamp: 'MatejRazak 11/21/2018 17:25'!director: aString	director := aString ! !!Film methodsFor: 'accessing' stamp: 'MatejRazak 11/21/2018 17:24'!name	^ name! !!Film methodsFor: 'accessing' stamp: 'MatejRazak 11/21/2018 17:24'!director	^ director! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Film class	instanceVariableNames: ''!!Film class methodsFor: 'as yet unclassified' stamp: 'MatejRazak 12/20/2018 12:42'!RemoveRecords	Film removeAll.! !!Film class methodsFor: 'as yet unclassified' stamp: 'MatejRazak 12/21/2018 10:50'!Examples1|Director1 Director2|Director1 := Director new firstName: 'Adam'; Surname: 'Novak'; born: 1990.Director2 := Director new firstName: 'Lukas'; Surname: 'Tomek'; born: 1800.Film new	id: 1;	director: Director1 ;	name: 'Nazev1';	save.Film new	id: 2;	director: Director1 ;	name: 'Nazev2';	save.Film new	id: 3;	director: Director2 ;	name: 'Nazev3';	save.Film new	id: 4;	director: Director1 ;	name: 'Nazev4';	save.! !!Film class methodsFor: 'testing' stamp: 'MatejRazak 11/21/2018 17:28'!isVoyageRoot	^ true! !!Film class methodsFor: 'initialization' stamp: 'MatejRazak 11/21/2018 17:23'!setUpConnection	| repository |	repository := VOMongoRepository		host: 'localhost'		database: 'Films'.	repository enableSingleton.! !ComposableModel subclass: #MyWindow1	instanceVariableNames: 'items screen input state'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!MyWindow1 methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 00:15'!initialize	state := self class state withContext: self.	super initialize.! !!MyWindow1 methodsFor: 'initialization' stamp: 'MatejRazak 12/20/2018 23:02'!initializeWidgets	items := self instantiate: state class.	! !!MyWindow1 methodsFor: 'api' stamp: 'MatejRazak 12/20/2018 13:25'!title	^ 'Film Database'! !!MyWindow1 methodsFor: 'api' stamp: 'MatejRazak 12/20/2018 20:22'!extent	^ 500@500! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 23:42'!items: a	items := a ! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 22:28'!state: aState	state := aState withContext: self.! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 15:18'!input	^ input ! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 15:17'!screen	^ screen! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 23:31'!defaultWindowModelClass^ TickingWindowModel! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:05'!items	^ items ! !!MyWindow1 methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 22:21'!state	^ state! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MyWindow1 class	instanceVariableNames: 'state'!!MyWindow1 class methodsFor: 'instance creation' stamp: 'MatejRazak 12/21/2018 00:18'!new: aState	state := aState.	^ self basicNew initialize! !!MyWindow1 class methodsFor: 'instance creation' stamp: 'MatejRazak 12/21/2018 00:15'!new	state := WholeDatabaseState.	^ self basicNew initialize! !!MyWindow1 class methodsFor: 'specs' stamp: 'MatejRazak 12/20/2018 21:05'!defaultSpec	<spec: #default>	^ SpecLayout composed		add: #items;		yourself! !!MyWindow1 class methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 00:12'!state	^ state! !!MyWindow1 class methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 00:12'!state: aState	state := aState! !!MyWindow1 class methodsFor: 'as yet unclassified' stamp: 'MatejRazak 12/21/2018 09:09'!FirstStart	Film setUpConnection.	Film Examples1.	self new openWithSpec! !ComposableModel subclass: #StateClass	instanceVariableNames: 'myWindow'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!StateClass methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:54'!singledata: aNumber	| data film |	film := Film selectOne: [ :each | each id = aNumber ].	data := OrderedCollection new.	data add: 'ID: ' , film id greaseString.	data add: 'Name: ' , film name.	data add: 'Director: ' , film director firstName, ' ',film director Surname.	^ data! !!StateClass methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 11:28'!directordata: aDirector	| data films |	"films := Film selectMany: [ :each | (each director firstName = aDirector firstName)  ]."	data := OrderedCollection new.	data add: 'Born: ' , aDirector born greaseString.	data add: 'FirstName: ' , aDirector firstName.	data add: 'SurName: ' , aDirector Surname.		^ data! !!StateClass methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:29'!data	^ Film selectAll collect: [ :each | 'ID: ',each id greaseString ,', Name: ',each name ]! !!StateClass methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:23'!context: aContext	myWindow := aContext.! !!StateClass methodsFor: 'initialization' stamp: 'MatejRazak 12/20/2018 20:28'!initializeWidgets	^ self subclassResponsibility ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!StateClass class	instanceVariableNames: 'MySecWindow'!!StateClass class methodsFor: 'as yet unclassified' stamp: 'MatejRazak 12/20/2018 22:09'!withContext: aContext	MySecWindow := aContext.	^ self new context: aContext ! !!StateClass class methodsFor: 'as yet unclassified' stamp: 'MatejRazak 12/20/2018 22:13'!mySecWindow	^ MySecWindow ! !StateClass subclass: #DirectorState	instanceVariableNames: 'buttonReturn input screen'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!DirectorState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:56'!buttonReturn	^ buttonReturn! !!DirectorState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:57'!screen	^ screen ! !!DirectorState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:57'!input	^ input! !!DirectorState methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 11:06'!initializePresenter	input acceptBlock: [ input text: '' ].	buttonReturn action: [ (MyWindow1 new: SingleState ) openWithSpec . myWindow delete ].! !!DirectorState methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 11:09'!initializeWidgets	myWindow := self class mySecWindow.	screen := ListModel new.	screen items:  (self directordata: self class director).	buttonReturn := self newButton label: 'Return'.	input := TextInputFieldModel new		ghostText: 'Zadejte ID filmu';		enabled: true.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DirectorState class	instanceVariableNames: 'director'!!DirectorState class methodsFor: 'specs' stamp: 'MatejRazak 12/21/2018 10:57'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :column | column add: #screen; add: #input height: 30 ]		origin: 0 @ 0 corner: 0.7 @ 1;		newColumn: [ :column | column add: #buttonReturn ]		origin: 0.7 @ 0 corner: 1 @ 1;		yourself! !!DirectorState class methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 11:04'!director: aDirector	director := aDirector ! !!DirectorState class methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 11:04'!director 	^ director ! !StateClass subclass: #SingleState	instanceVariableNames: 'buttonReturn buttonDirector input screen id'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!SingleState methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 11:13'!initializePresenter	input acceptBlock: [ :aNumber | self inputText: aNumber greaseInteger. myWindow delete ].	buttonReturn action: [ MyWindow1 new openWithSpec . myWindow delete ].	buttonDirector action: [ 		DirectorState director: (Film selectOne: [ :each | each id = self class id ]) director.		(MyWindow1 new: DirectorState) openWithSpec . myWindow delete ].! !!SingleState methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 10:55'!initializeWidgets	myWindow := self class mySecWindow.	screen := ListModel new.	screen items:  (self singledata: self class id).	buttonReturn := self newButton label: 'Return'.	buttonDirector := self newButton label: 'Show director'.	input := TextInputFieldModel new		ghostText: 'Zadejte ID filmu';		enabled: true.! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 22:56'!id: aNumber	id := aNumber.! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:31'!buttonReturn	^ buttonReturn ! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 23:24'!id	^ id! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:31'!input 	^ input ! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:31'!screen 	^ screen ! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 00:28'!inputText: aNumber	self class id: aNumber.	(MyWindow1 new: self class) openWithSpec! !!SingleState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 10:54'!buttonDirector	^ buttonDirector  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SingleState class	instanceVariableNames: 'id'!!SingleState class methodsFor: 'specs' stamp: 'MatejRazak 12/21/2018 10:58'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :column | column add: #screen; add: #input height: 30 ]		origin: 0 @ 0 corner: 0.7 @ 1;		newColumn: [ :column | column add: #buttonReturn; add: #buttonDirector ]		origin: 0.7 @ 0 corner: 1 @ 1;		yourself! !!SingleState class methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 00:23'!id	^ id! !!SingleState class methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 00:09'!id: aNumber	id := aNumber! !StateClass subclass: #WholeDatabaseState	instanceVariableNames: 'buttonAddDirector buttonAddActor buttonAddFilm buttonRemove buttonSearch input screen'	classVariableNames: ''	poolDictionaries: ''	category: 'Semestralka'!!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 00:19'!inputText: aNumber	SingleState id: aNumber.	(MyWindow1 new: SingleState) openWithSpec! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 11:37'!buttonAddActor	^ buttonAddActor  ! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:01'!input 	^ input ! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 20:25'!buttonSearch	^ buttonSearch   ! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 21:11'!screen 	^ screen ! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 11:37'!buttonAddDirector	^ buttonAddDirector  ! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/21/2018 11:37'!buttonAddFilm	^ buttonAddFilm ! !!WholeDatabaseState methodsFor: 'accessing' stamp: 'MatejRazak 12/20/2018 20:25'!buttonRemove	^ buttonRemove  ! !!WholeDatabaseState methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 11:41'!initializePresenter	input acceptBlock: [ :aNumber | self inputText: aNumber greaseInteger. myWindow delete ].	buttonAddFilm action: [ self print: 'Push Add' ].! !!WholeDatabaseState methodsFor: 'initialization' stamp: 'MatejRazak 12/21/2018 11:39'!initializeWidgets	myWindow := self class mySecWindow.	screen := ListModel new.	screen items:  self data.	buttonAddFilm := self newButton label: 'Add Film'.	buttonAddDirector := self newButton label: 'Add Director'.	buttonAddActor := self newButton label: 'Add Actor'.	buttonRemove := self newButton label: 'Remove Film'.	buttonSearch := self newButton label: 'Search'.	input := TextInputFieldModel new		ghostText: 'Zadejte ID filmu';		enabled: true.! !!WholeDatabaseState methodsFor: 'printing' stamp: 'MatejRazak 12/21/2018 00:37'!print: aString	| prev |	prev := self data.	prev add: aString.	screen items: prev! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WholeDatabaseState class	instanceVariableNames: ''!!WholeDatabaseState class methodsFor: 'specs' stamp: 'MatejRazak 12/21/2018 11:41'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :column | column add: #screen; add: #input height: 30 ]		origin: 0 @ 0 corner: 0.7 @ 1;		newColumn: [ :column | column add: #buttonAddFilm; add: #buttonAddActor; add: #buttonAddDirector; add: #buttonSearch  ]		origin: 0.7 @ 0 corner: 1 @ 1;		yourself		! !